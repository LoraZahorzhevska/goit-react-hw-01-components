{"version":3,"sources":["components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["Profile","name","tag","location","avatar","stats","class","src","alt","followers","views","likes","Statistics","title","map","id","label","percentage","FriendListItem","isOnline","width","propTypes","friends","PropTypes","arrayOf","shape","string","isRequired","FriendList","TransactionHistory","items","type","amount","currency","App","user","statistics","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d815ee4e.chunk.js","sourcesContent":["import React from \"react\";\r\n// import DefaultImg from \"../../components/default.jpg\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => {\r\n  return (\r\n    <div class=\"profile\">\r\n      <div class=\"description\">\r\n        <img src={avatar} alt=\"Аватар пользователя\" class=\"avatar\" />\r\n        <p class=\"name\">{name}</p>\r\n        <p class=\"tag\">{tag}</p>\r\n        <p class=\"location\">{location}</p>\r\n      </div>\r\n\r\n      <ul class=\"stats\">\r\n        <li>\r\n          <span class=\"label\">Followers</span>\r\n          <span class=\"quantity\">{stats.followers}</span>\r\n        </li>\r\n        <li>\r\n          <span class=\"label\">Views</span>\r\n          <span class=\"quantity\">{stats.views}</span>\r\n        </li>\r\n        <li>\r\n          <span class=\"label\">Likes</span>\r\n          <span class=\"quantity\">{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Profile.defaultProps = {\r\n//   avatar: DefaultImg,\r\n// };\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ title, stats }) => (\r\n  <section class=\"statistics\">\r\n    {title && <h2 class=\"title\">{title}</h2>}\r\n\r\n    <ul class=\"stat-list\">\r\n      {stats.map(({ id, label, percentage }) => (\r\n        <li class=\"item\" key={id}>\r\n          <span class=\"label\">{label}</span>\r\n          <span class=\"percentage\">{percentage}</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </section>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline }) => (\r\n  <li class=\"item\">\r\n    {/* {isOnline ? <Span online /> : <Span />} */}\r\n    <span class=\"status\">{isOnline}</span>\r\n    <img class=\"avatar\" src={avatar} alt={name} width=\"48\" />\r\n    <p class=\"name\">{name}</p>\r\n  </li>\r\n);\r\n\r\n// FriendListItem.defaultProps = {\r\n//   url: DefaultImg,\r\n// };\r\n\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default FriendListItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport FriendListItem from \"./FriendListItem\";\r\n\r\nconst FriendList = ({ friends }) => (\r\n  <ul class=\"friend-list\">\r\n    {friends.map(({ id, avatar, isOnline, name }) => (\r\n      <li key={id}>\r\n        <FriendListItem avatar={avatar} name={name} isOnline={isOnline} />\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nFriendListItem.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default FriendList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TransactionHistory = ({ items }) => (\r\n  <table class=\"transaction-history\">\r\n    <thead>\r\n      <tr>\r\n        <th>Type</th>\r\n        <th>Amount</th>\r\n        <th>Currency</th>\r\n      </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n      {items.map(({ id, type, amount, currency }) => (\r\n        <tr key={id}>\r\n          <td>{type}</td>\r\n          <td>{amount}</td>\r\n          <td>{currency}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from \"react\";\nimport Profile from \"./components/Profile/Profile\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport FriendList from \"./components/FriendList/FriendList\";\nimport TransactionHistory from \"./components/TransactionHistory/TransactionHistory\";\nimport user from \"./components/Profile/Profile.json\";\nimport statistics from \"./components/Statistics/statistics-data.json\";\nimport friends from \"./components/FriendList/friends.json\";\nimport transactions from \"./components/TransactionHistory/transactions.json\";\n\nconst App = () => (\n  // <div>\n  //   <Profile\n  //     name={user.name}\n  //     tag={user.tag}\n  //     location={user.location}\n  //     avatar={user.avatar}\n  //     stats={user.stats}\n  //   />\n  // </div>\n\n  // <div>\n  //   <Statistics title=\"Upload stats\" stats={statistics} />\n  //   {/* <Statistics stats={statistics} /> */}\n  // </div>\n\n  // <FriendList friends={friends} />\n  // <container>\n  //   <Profile\n  //     name={user.name}\n  //     tag={user.tag}\n  //     location={user.location}\n  //     avatar={user.avatar}\n  //     stats={user.stats}\n  //   />\n  //   <Statistics title=\"Upload stats\" stats={statistics} />\n  //   <FriendList friends={friends} />\n  //   <TransactionHistory items={transactions} />\n  // </container>\n\n  <>\n    <Profile\n      name={user.name}\n      tag={user.tag}\n      location={user.location}\n      avatar={user.avatar}\n      stats={user.stats}\n    />\n    <Statistics title=\"Upload stats\" stats={statistics} />\n    <FriendList friends={friends} />\n    <TransactionHistory items={transactions} />\n  </>\n  // <TransactionHistory items={transactions} />\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}